import heapq # (0,0)이 기준이 되어 거리를 구하는 문제{(n-1,n-1)과으 거리가 답} -> '다익스트라' 사용
INF=int(1e9)
dx=[-1,0,1,0]
dy=[0,1,0,-1]
for tc in range(int(input())):
    n=int(input())
    graph=[]
    for i in range(n):
        graph.append(list(map(int,input().split())))
    distance=[[INF]*n for _ in range(n)]
    x,y=0,0
    q=[(graph[x][y],x,y)] #*** 좌표니까 now(노드번호) 대신 x,y
    distance[x][y]=graph[x][y]

    while q:
        dist,x,y=heapq.heappop(q)
        if distance[x][y]<dist:
            continue
        for i in range(4): #예제에서는 현재노드와 연결된 노드들만 하면 되는데,여긴 상하좌우로 연결됨(계속 돌고 돌면서 최소를 찾아감)
            nx=x+dx[i]
            ny=y+dy[i]
            if nx<0 or nx>=n or ny<0 or ny>=n:
                continue
            cost=dist+graph[nx][ny]
            if cost<distance[nx][ny]:   #예를들어 직진해서 간것보다 삥 돌아서 온게 빠를수도 있음(5x5문제,답19)
                distance[nx][ny]=cost
                heapq.heappush(q,(cost,nx,ny)) #***
    print(distance[n-1][n-1])
